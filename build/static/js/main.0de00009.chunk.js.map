{"version":3,"sources":["LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","Login","error","useState","username","password","details","setDetails","className","onSubmit","e","preventDefault","htlmlFor","name","type","id","autoFocus","onChange","target","value","axios","require","user","setUser","setError","onClick","console","log","inputEmail","inputPassword","get","then","response","i","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAqDeA,MAlDf,YAAoC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MACvB,EAA6BC,mBAAS,CAAEC,SAAS,GAAIC,SAAS,KAA9D,mBAAMC,EAAN,KAAeC,EAAf,KAMA,OACI,qBAAKC,UAAW,aAAhB,SACA,sBAAMC,SANY,SAAAC,GAClBA,EAAEC,iBACFV,EAAMK,IAIN,SACI,sBAAKE,UAAW,aAAhB,UACI,oBAAIA,UAAW,eAAf,oBACY,KAAVN,EAAiB,qBAAKM,UAAW,QAAhB,SAA0BN,IAAgB,GAC7D,wBAAOM,UAAW,aAAlB,UACI,+BACQ,6BACI,qBAAKI,SAAU,WAAf,SACI,uBAAOJ,UAAW,WAAlB,yBAGR,6BACI,uBAAOK,KAAM,WAAYC,KAAM,OAAQC,GAAI,WAAYC,UAAW,YAAaC,SAAU,SAAAP,GAAC,OAAIH,EAAW,2BAAID,GAAL,IAAcF,SAAUM,EAAEQ,OAAOC,UAASA,MAAOb,EAAQF,gBAI7K,+BACQ,6BACI,uBAAOI,UAAW,WAAlB,yBAEJ,6BACI,uBAAOK,KAAM,WAAYC,KAAM,WAAYC,GAAI,WAAYE,SAAU,SAAAP,GAAC,OAAIH,EAAW,2BAAID,GAAL,IAAcD,SAAUK,EAAEQ,OAAOC,UAASA,MAAOb,EAAQD,mBAK7J,uBACA,uBACA,uBAAOG,UAAW,gBAAlB,SACI,6BACI,6BACI,uBAAQA,UAAW,SAAUK,KAAM,SAAUC,KAAM,SAAUC,GAAI,SAAUI,MAAO,yBCtCxGC,EAAQC,EAAQ,IACP,SAASpB,IAEpB,IAKA,EAAyBE,mBAAS,CAACC,SAAU,KAA7C,mBAAQkB,EAAR,KAAcC,EAAd,KACA,EAA0BpB,mBAAS,IAAnC,mBAAOD,EAAP,KAAcsB,EAAd,KAkCA,OACI,qBAAKhB,UAAW,QAAhB,SACwB,KAAlBc,EAAKlB,SACH,sBAAKI,UAAW,UAAhB,UACI,2CAAa,+BAAOc,EAAKlB,cACzB,wBAAQqB,QAVL,WACfC,QAAQC,IAAI,UACZJ,EAAQ,CAACnB,SAAU,MAQP,uBAGJ,cAAC,EAAD,CAAWH,MAvCT,SAAAK,GAIV,IAAMsB,EAAatB,EAAQF,SACrByB,EAAgBvB,EAAQD,SAE9Be,EAAMU,IAAI,iCACTC,MAAK,SAAUC,GACZN,QAAQC,IAAIK,EAAQ,MACpB,IAAK,IAAIC,EAAI,EAAGA,EAAGD,EAAQ,KAASE,OAAQD,IACpCD,EAAQ,KAASC,GAAjB,OAAgCL,GAAcI,EAAQ,KAASC,GAAjB,UAAmCJ,EACjFN,EAAQ,CACZnB,SAAUE,EAAQO,OAGdW,EAAS,kCAuBYtB,MAAOA,MCxDhD,IAYeiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.0de00009.chunk.js","sourcesContent":["import React, {useState}from 'react';\nimport \"./index.css\";\n\nfunction LoginForm({Login, error}) {\n    const[details, setDetails] = useState({ username:\"\", password:\"\"})\n\n    const submitHandler = e =>{\n        e.preventDefault();\n        Login(details)\n    }\n    return(\n        <div className={\"outer-form\"}>\n        <form onSubmit={submitHandler}>\n            <div className={\"form-inner\"}>\n                <h2 className={\"login-header\"}>Log In</h2>\n                {(error !== \"\") ? (<div className={\"error\"}>{error}</div>) : \"\"}\n                <table className={\"login-data\"}>\n                    <tr>\n                            <td>\n                                <div htlmlFor={\"username\"}>\n                                    <label className={\"username\"}>Email: </label>\n                                </div>\n                            </td>\n                            <td>\n                                <input name={\"username\"} type={\"text\"} id={\"username\"} autoFocus={\"autofocus\"} onChange={e => setDetails({...details, username: e.target.value})} value={details.username}/>\n                            </td>\n\n                    </tr>\n                    <tr>\n                            <td>\n                                <label className={\"password\"}>Password:</label>\n                            </td>\n                            <td>\n                                <input name={\"password\"} type={\"password\"} id={\"password\"} onChange={e => setDetails({...details, password: e.target.value})} value={details.password}/>\n                            </td>\n                    </tr>\n\n                </table>\n                <br/>\n                <br/>\n                <table className={\"submit-button\"}>\n                    <tr>\n                        <td>\n                            <input  className={\"submit\"} name={\"submit\"} type={\"submit\"} id={\"submit\"} value={\"Log In\"}/>\n                        </td>\n                    </tr>\n                </table>\n\n            </div>\n        </form>\n        </div>\n    )\n}\nexport default LoginForm\n","import './Njitlogo.png'\nimport LoginForm from \"./LoginForm\";\nimport React, {useState} from \"react\";\nimport './index.css';\n\nconst axios = require('axios');\nexport default function Login() {\n\n    const  adminUser = {\n        username: \"admin\",\n        password: \"admin123\"\n    }\n\n    const [ user, setUser] = useState({username: \"\" })\n    const [error, setError] = useState(\"\")\n\n\n    const Login = details => {\n        /*}\n        Need to change if conditions to response in database\n        */\n        const inputEmail = details.username;\n        const inputPassword = details.password;\n\n        axios.get('http://18.191.4.18:3001/users')\n        .then(function (response) {\n            console.log(response[\"data\"]);\n            for (let i = 0; i< response[\"data\"].length; i++) {\n                if (response[\"data\"][i][\"email\"] == inputEmail && response[\"data\"][i][\"password\"] == inputPassword) {\n                    setUser({\n              \t\tusername: details.name,\n            \t    })\n                }else{\n                    setError(\"Invalid Email or Password.\")\n                }\n            }\n        });\n    }\n\n      \n        \n\n\n        const Logout = () => {\n        console.log(\"Logout\");\n        setUser({username: \"\"})\n\n        }\n    return (\n        <div className= \"Login\">\n            {(user.username !== \"\") ? (\n                <div className={\"welcome\"}>\n                    <h2>Welcome, <span>{user.username}</span></h2>\n                    <button onClick={Logout}>Logout</button>\n                </div>\n            ):(\n                <LoginForm Login={Login} error={error}/>\n\n            )}\n        </div>\n\n    )}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}