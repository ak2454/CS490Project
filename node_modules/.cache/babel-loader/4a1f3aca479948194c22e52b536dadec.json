{"ast":null,"code":"'use strict'; // http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\n\nvar _classCallCheck = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Packet = require('../packets/packet');\n\nvar AuthSwitchRequest = /*#__PURE__*/function () {\n  function AuthSwitchRequest(opts) {\n    _classCallCheck(this, AuthSwitchRequest);\n\n    this.pluginName = opts.pluginName;\n    this.pluginData = opts.pluginData;\n  }\n\n  _createClass(AuthSwitchRequest, [{\n    key: \"toPacket\",\n    value: function toPacket() {\n      var length = 6 + this.pluginName.length + this.pluginData.length;\n      var buffer = Buffer.allocUnsafe(length);\n      var packet = new Packet(0, buffer, 0, length);\n      packet.offset = 4;\n      packet.writeInt8(0xfe); // TODO: use server encoding\n\n      packet.writeNullTerminatedString(this.pluginName, 'cesu8');\n      packet.writeBuffer(this.pluginData);\n      return packet;\n    }\n  }], [{\n    key: \"fromPacket\",\n    value: function fromPacket(packet) {\n      packet.readInt8(); // marker\n      // assert marker == 0xfe?\n      // TODO: use server encoding\n\n      var name = packet.readNullTerminatedString('cesu8');\n      var data = packet.readBuffer();\n      return new AuthSwitchRequest({\n        pluginName: name,\n        pluginData: data\n      });\n    }\n  }]);\n\n  return AuthSwitchRequest;\n}();\n\nmodule.exports = AuthSwitchRequest;","map":{"version":3,"sources":["/root/Test/node_modules/mysql2/lib/packets/auth_switch_request.js"],"names":["Packet","require","AuthSwitchRequest","opts","pluginName","pluginData","length","buffer","Buffer","allocUnsafe","packet","offset","writeInt8","writeNullTerminatedString","writeBuffer","readInt8","name","readNullTerminatedString","data","readBuffer","module","exports"],"mappings":"AAAA,a,CAEA;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAAtB;;IAEMC,iB;AACJ,6BAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,UAAL,GAAkBD,IAAI,CAACC,UAAvB;AACA,SAAKC,UAAL,GAAkBF,IAAI,CAACE,UAAvB;AACD;;;;WAED,oBAAW;AACT,UAAMC,MAAM,GAAG,IAAI,KAAKF,UAAL,CAAgBE,MAApB,GAA6B,KAAKD,UAAL,CAAgBC,MAA5D;AACA,UAAMC,MAAM,GAAGC,MAAM,CAACC,WAAP,CAAmBH,MAAnB,CAAf;AACA,UAAMI,MAAM,GAAG,IAAIV,MAAJ,CAAW,CAAX,EAAcO,MAAd,EAAsB,CAAtB,EAAyBD,MAAzB,CAAf;AACAI,MAAAA,MAAM,CAACC,MAAP,GAAgB,CAAhB;AACAD,MAAAA,MAAM,CAACE,SAAP,CAAiB,IAAjB,EALS,CAMT;;AACAF,MAAAA,MAAM,CAACG,yBAAP,CAAiC,KAAKT,UAAtC,EAAkD,OAAlD;AACAM,MAAAA,MAAM,CAACI,WAAP,CAAmB,KAAKT,UAAxB;AACA,aAAOK,MAAP;AACD;;;WAED,oBAAkBA,MAAlB,EAA0B;AACxBA,MAAAA,MAAM,CAACK,QAAP,GADwB,CACL;AACnB;AACA;;AACA,UAAMC,IAAI,GAAGN,MAAM,CAACO,wBAAP,CAAgC,OAAhC,CAAb;AACA,UAAMC,IAAI,GAAGR,MAAM,CAACS,UAAP,EAAb;AACA,aAAO,IAAIjB,iBAAJ,CAAsB;AAC3BE,QAAAA,UAAU,EAAEY,IADe;AAE3BX,QAAAA,UAAU,EAAEa;AAFe,OAAtB,CAAP;AAID;;;;;;AAGHE,MAAM,CAACC,OAAP,GAAiBnB,iBAAjB","sourcesContent":["'use strict';\n\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\n\nconst Packet = require('../packets/packet');\n\nclass AuthSwitchRequest {\n  constructor(opts) {\n    this.pluginName = opts.pluginName;\n    this.pluginData = opts.pluginData;\n  }\n\n  toPacket() {\n    const length = 6 + this.pluginName.length + this.pluginData.length;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0xfe);\n    // TODO: use server encoding\n    packet.writeNullTerminatedString(this.pluginName, 'cesu8');\n    packet.writeBuffer(this.pluginData);\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    packet.readInt8(); // marker\n    // assert marker == 0xfe?\n    // TODO: use server encoding\n    const name = packet.readNullTerminatedString('cesu8');\n    const data = packet.readBuffer();\n    return new AuthSwitchRequest({\n      pluginName: name,\n      pluginData: data\n    });\n  }\n}\n\nmodule.exports = AuthSwitchRequest;\n"]},"metadata":{},"sourceType":"script"}