{"ast":null,"code":"'use strict';\n\nvar _assertThisInitialized = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _classCallCheck = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar core = require('./index.js');\n\nvar EventEmitter = require('events').EventEmitter;\n\nfunction makeDoneCb(resolve, reject, localErr) {\n  return function (err, rows, fields) {\n    if (err) {\n      localErr.message = err.message;\n      localErr.code = err.code;\n      localErr.errno = err.errno;\n      localErr.sql = err.sql;\n      localErr.sqlState = err.sqlState;\n      localErr.sqlMessage = err.sqlMessage;\n      reject(localErr);\n    } else {\n      resolve([rows, fields]);\n    }\n  };\n}\n\nfunction inheritEvents(source, target, events) {\n  var listeners = {};\n  target.on('newListener', function (eventName) {\n    if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n      source.on(eventName, listeners[eventName] = function () {\n        var args = [].slice.call(arguments);\n        args.unshift(eventName);\n        target.emit.apply(target, args);\n      });\n    }\n  }).on('removeListener', function (eventName) {\n    if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n      source.removeListener(eventName, listeners[eventName]);\n      delete listeners[eventName];\n    }\n  });\n}\n\nvar PromisePreparedStatementInfo = /*#__PURE__*/function () {\n  function PromisePreparedStatementInfo(statement, promiseImpl) {\n    _classCallCheck(this, PromisePreparedStatementInfo);\n\n    this.statement = statement;\n    this.Promise = promiseImpl;\n  }\n\n  _createClass(PromisePreparedStatementInfo, [{\n    key: \"execute\",\n    value: function execute(parameters) {\n      var s = this.statement;\n      var localErr = new Error();\n      return new this.Promise(function (resolve, reject) {\n        var done = makeDoneCb(resolve, reject, localErr);\n\n        if (parameters) {\n          s.execute(parameters, done);\n        } else {\n          s.execute(done);\n        }\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this = this;\n\n      return new this.Promise(function (resolve) {\n        _this.statement.close();\n\n        resolve();\n      });\n    }\n  }]);\n\n  return PromisePreparedStatementInfo;\n}();\n\nvar PromiseConnection = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(PromiseConnection, _EventEmitter);\n\n  var _super = _createSuper(PromiseConnection);\n\n  function PromiseConnection(connection, promiseImpl) {\n    var _this2;\n\n    _classCallCheck(this, PromiseConnection);\n\n    _this2 = _super.call(this);\n    _this2.connection = connection;\n    _this2.Promise = promiseImpl || Promise;\n    inheritEvents(connection, _assertThisInitialized(_this2), ['error', 'drain', 'connect', 'end', 'enqueue']);\n    return _this2;\n  }\n\n  _createClass(PromiseConnection, [{\n    key: \"release\",\n    value: function release() {\n      this.connection.release();\n    }\n  }, {\n    key: \"query\",\n    value: function query(_query, params) {\n      var c = this.connection;\n      var localErr = new Error();\n\n      if (typeof params === 'function') {\n        throw new Error('Callback function is not available with promise clients.');\n      }\n\n      return new this.Promise(function (resolve, reject) {\n        var done = makeDoneCb(resolve, reject, localErr);\n\n        if (params !== undefined) {\n          c.query(_query, params, done);\n        } else {\n          c.query(_query, done);\n        }\n      });\n    }\n  }, {\n    key: \"execute\",\n    value: function execute(query, params) {\n      var c = this.connection;\n      var localErr = new Error();\n\n      if (typeof params === 'function') {\n        throw new Error('Callback function is not available with promise clients.');\n      }\n\n      return new this.Promise(function (resolve, reject) {\n        var done = makeDoneCb(resolve, reject, localErr);\n\n        if (params !== undefined) {\n          c.execute(query, params, done);\n        } else {\n          c.execute(query, done);\n        }\n      });\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      var _this3 = this;\n\n      return new this.Promise(function (resolve) {\n        _this3.connection.end(resolve);\n      });\n    }\n  }, {\n    key: \"beginTransaction\",\n    value: function beginTransaction() {\n      var c = this.connection;\n      var localErr = new Error();\n      return new this.Promise(function (resolve, reject) {\n        var done = makeDoneCb(resolve, reject, localErr);\n        c.beginTransaction(done);\n      });\n    }\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      var c = this.connection;\n      var localErr = new Error();\n      return new this.Promise(function (resolve, reject) {\n        var done = makeDoneCb(resolve, reject, localErr);\n        c.commit(done);\n      });\n    }\n  }, {\n    key: \"rollback\",\n    value: function rollback() {\n      var c = this.connection;\n      var localErr = new Error();\n      return new this.Promise(function (resolve, reject) {\n        var done = makeDoneCb(resolve, reject, localErr);\n        c.rollback(done);\n      });\n    }\n  }, {\n    key: \"ping\",\n    value: function ping() {\n      var c = this.connection;\n      var localErr = new Error();\n      return new this.Promise(function (resolve, reject) {\n        var done = makeDoneCb(resolve, reject, localErr);\n        c.ping(done);\n      });\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      var c = this.connection;\n      var localErr = new Error();\n      return new this.Promise(function (resolve, reject) {\n        c.connect(function (err, param) {\n          if (err) {\n            localErr.message = err.message;\n            localErr.code = err.code;\n            localErr.errno = err.errno;\n            localErr.sqlState = err.sqlState;\n            localErr.sqlMessage = err.sqlMessage;\n            reject(localErr);\n          } else {\n            resolve(param);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"prepare\",\n    value: function prepare(options) {\n      var c = this.connection;\n      var promiseImpl = this.Promise;\n      var localErr = new Error();\n      return new this.Promise(function (resolve, reject) {\n        c.prepare(options, function (err, statement) {\n          if (err) {\n            localErr.message = err.message;\n            localErr.code = err.code;\n            localErr.errno = err.errno;\n            localErr.sqlState = err.sqlState;\n            localErr.sqlMessage = err.sqlMessage;\n            reject(localErr);\n          } else {\n            var wrappedStatement = new PromisePreparedStatementInfo(statement, promiseImpl);\n            resolve(wrappedStatement);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"changeUser\",\n    value: function changeUser(options) {\n      var c = this.connection;\n      var localErr = new Error();\n      return new this.Promise(function (resolve, reject) {\n        c.changeUser(options, function (err) {\n          if (err) {\n            localErr.message = err.message;\n            localErr.code = err.code;\n            localErr.errno = err.errno;\n            localErr.sqlState = err.sqlState;\n            localErr.sqlMessage = err.sqlMessage;\n            reject(localErr);\n          } else {\n            resolve();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"config\",\n    get: function get() {\n      return this.connection.config;\n    }\n  }, {\n    key: \"threadId\",\n    get: function get() {\n      return this.connection.threadId;\n    }\n  }]);\n\n  return PromiseConnection;\n}(EventEmitter);\n\nfunction createConnection(opts) {\n  var coreConnection = core.createConnection(opts);\n  var createConnectionErr = new Error();\n  var thePromise = opts.Promise || Promise;\n\n  if (!thePromise) {\n    throw new Error('no Promise implementation available.' + 'Use promise-enabled node version or pass userland Promise' + \" implementation as parameter, for example: { Promise: require('bluebird') }\");\n  }\n\n  return new thePromise(function (resolve, reject) {\n    coreConnection.once('connect', function () {\n      resolve(new PromiseConnection(coreConnection, thePromise));\n    });\n    coreConnection.once('error', function (err) {\n      createConnectionErr.message = err.message;\n      createConnectionErr.code = err.code;\n      createConnectionErr.errno = err.errno;\n      createConnectionErr.sqlState = err.sqlState;\n      reject(createConnectionErr);\n    });\n  });\n} // note: the callback of \"changeUser\" is not called on success\n// hence there is no possibility to call \"resolve\"\n// patching PromiseConnection\n// create facade functions for prototype functions on \"Connection\" that are not yet\n// implemented with PromiseConnection\n// proxy synchronous functions only\n\n\n(function (functionsToWrap) {\n  for (var i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    var func = functionsToWrap[i];\n\n    if (typeof core.Connection.prototype[func] === 'function' && PromiseConnection.prototype[func] === undefined) {\n      PromiseConnection.prototype[func] = function factory(funcName) {\n        return function () {\n          return core.Connection.prototype[funcName].apply(this.connection, arguments);\n        };\n      }(func);\n    }\n  }\n})([// synchronous functions\n'close', 'createBinlogStream', 'destroy', 'escape', 'escapeId', 'format', 'pause', 'pipe', 'resume', 'unprepare']);\n\nvar PromisePoolConnection = /*#__PURE__*/function (_PromiseConnection) {\n  _inherits(PromisePoolConnection, _PromiseConnection);\n\n  var _super2 = _createSuper(PromisePoolConnection);\n\n  function PromisePoolConnection(connection, promiseImpl) {\n    _classCallCheck(this, PromisePoolConnection);\n\n    return _super2.call(this, connection, promiseImpl);\n  }\n\n  _createClass(PromisePoolConnection, [{\n    key: \"destroy\",\n    value: function destroy() {\n      return core.PoolConnection.prototype.destroy.apply(this.connection, arguments);\n    }\n  }]);\n\n  return PromisePoolConnection;\n}(PromiseConnection);\n\nvar PromisePool = /*#__PURE__*/function (_EventEmitter2) {\n  _inherits(PromisePool, _EventEmitter2);\n\n  var _super3 = _createSuper(PromisePool);\n\n  function PromisePool(pool, thePromise) {\n    var _this4;\n\n    _classCallCheck(this, PromisePool);\n\n    _this4 = _super3.call(this);\n    _this4.pool = pool;\n    _this4.Promise = thePromise || Promise;\n    inheritEvents(pool, _assertThisInitialized(_this4), ['acquire', 'connection', 'enqueue', 'release']);\n    return _this4;\n  }\n\n  _createClass(PromisePool, [{\n    key: \"getConnection\",\n    value: function getConnection() {\n      var _this5 = this;\n\n      var corePool = this.pool;\n      return new this.Promise(function (resolve, reject) {\n        corePool.getConnection(function (err, coreConnection) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(new PromisePoolConnection(coreConnection, _this5.Promise));\n          }\n        });\n      });\n    }\n  }, {\n    key: \"query\",\n    value: function query(sql, args) {\n      var corePool = this.pool;\n      var localErr = new Error();\n\n      if (typeof args === 'function') {\n        throw new Error('Callback function is not available with promise clients.');\n      }\n\n      return new this.Promise(function (resolve, reject) {\n        var done = makeDoneCb(resolve, reject, localErr);\n\n        if (args !== undefined) {\n          corePool.query(sql, args, done);\n        } else {\n          corePool.query(sql, done);\n        }\n      });\n    }\n  }, {\n    key: \"execute\",\n    value: function execute(sql, args) {\n      var corePool = this.pool;\n      var localErr = new Error();\n\n      if (typeof args === 'function') {\n        throw new Error('Callback function is not available with promise clients.');\n      }\n\n      return new this.Promise(function (resolve, reject) {\n        var done = makeDoneCb(resolve, reject, localErr);\n\n        if (args) {\n          corePool.execute(sql, args, done);\n        } else {\n          corePool.execute(sql, done);\n        }\n      });\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      var corePool = this.pool;\n      var localErr = new Error();\n      return new this.Promise(function (resolve, reject) {\n        corePool.end(function (err) {\n          if (err) {\n            localErr.message = err.message;\n            localErr.code = err.code;\n            localErr.errno = err.errno;\n            localErr.sqlState = err.sqlState;\n            localErr.sqlMessage = err.sqlMessage;\n            reject(localErr);\n          } else {\n            resolve();\n          }\n        });\n      });\n    }\n  }]);\n\n  return PromisePool;\n}(EventEmitter);\n\nfunction createPool(opts) {\n  var corePool = core.createPool(opts);\n  var thePromise = opts.Promise || Promise;\n\n  if (!thePromise) {\n    throw new Error('no Promise implementation available.' + 'Use promise-enabled node version or pass userland Promise' + \" implementation as parameter, for example: { Promise: require('bluebird') }\");\n  }\n\n  return new PromisePool(corePool, thePromise);\n}\n\n(function (functionsToWrap) {\n  for (var i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    var func = functionsToWrap[i];\n\n    if (typeof core.Pool.prototype[func] === 'function' && PromisePool.prototype[func] === undefined) {\n      PromisePool.prototype[func] = function factory(funcName) {\n        return function () {\n          return core.Pool.prototype[funcName].apply(this.pool, arguments);\n        };\n      }(func);\n    }\n  }\n})([// synchronous functions\n'escape', 'escapeId', 'format']);\n\nvar PromisePoolCluster = /*#__PURE__*/function (_EventEmitter3) {\n  _inherits(PromisePoolCluster, _EventEmitter3);\n\n  var _super4 = _createSuper(PromisePoolCluster);\n\n  function PromisePoolCluster(poolCluster, thePromise) {\n    var _this6;\n\n    _classCallCheck(this, PromisePoolCluster);\n\n    _this6 = _super4.call(this);\n    _this6.poolCluster = poolCluster;\n    _this6.Promise = thePromise || Promise;\n    inheritEvents(poolCluster, _assertThisInitialized(_this6), ['acquire', 'connection', 'enqueue', 'release']);\n    return _this6;\n  }\n\n  _createClass(PromisePoolCluster, [{\n    key: \"getConnection\",\n    value: function getConnection() {\n      var _this7 = this;\n\n      var corePoolCluster = this.poolCluster;\n      return new this.Promise(function (resolve, reject) {\n        corePoolCluster.getConnection(function (err, coreConnection) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(new PromisePoolConnection(coreConnection, _this7.Promise));\n          }\n        });\n      });\n    }\n  }, {\n    key: \"query\",\n    value: function query(sql, args) {\n      var corePoolCluster = this.poolCluster;\n      var localErr = new Error();\n\n      if (typeof args === 'function') {\n        throw new Error('Callback function is not available with promise clients.');\n      }\n\n      return new this.Promise(function (resolve, reject) {\n        var done = makeDoneCb(resolve, reject, localErr);\n        corePoolCluster.query(sql, args, done);\n      });\n    }\n  }, {\n    key: \"execute\",\n    value: function execute(sql, args) {\n      var corePoolCluster = this.poolCluster;\n      var localErr = new Error();\n\n      if (typeof args === 'function') {\n        throw new Error('Callback function is not available with promise clients.');\n      }\n\n      return new this.Promise(function (resolve, reject) {\n        var done = makeDoneCb(resolve, reject, localErr);\n        corePoolCluster.execute(sql, args, done);\n      });\n    }\n  }, {\n    key: \"of\",\n    value: function of(pattern, selector) {\n      return new PromisePoolCluster(this.poolCluster.of(pattern, selector), this.Promise);\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      var corePoolCluster = this.poolCluster;\n      var localErr = new Error();\n      return new this.Promise(function (resolve, reject) {\n        corePoolCluster.end(function (err) {\n          if (err) {\n            localErr.message = err.message;\n            localErr.code = err.code;\n            localErr.errno = err.errno;\n            localErr.sqlState = err.sqlState;\n            localErr.sqlMessage = err.sqlMessage;\n            reject(localErr);\n          } else {\n            resolve();\n          }\n        });\n      });\n    }\n  }]);\n\n  return PromisePoolCluster;\n}(EventEmitter);\n/**\n * proxy poolCluster synchronous functions\n */\n\n\n(function (functionsToWrap) {\n  for (var i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    var func = functionsToWrap[i];\n\n    if (typeof core.PoolCluster.prototype[func] === 'function' && PromisePoolCluster.prototype[func] === undefined) {\n      PromisePoolCluster.prototype[func] = function factory(funcName) {\n        return function () {\n          return core.PoolCluster.prototype[funcName].apply(this.poolCluster, arguments);\n        };\n      }(func);\n    }\n  }\n})(['add']);\n\nfunction createPoolCluster(opts) {\n  var corePoolCluster = core.createPoolCluster(opts);\n  var thePromise = opts && opts.Promise || Promise;\n\n  if (!thePromise) {\n    throw new Error('no Promise implementation available.' + 'Use promise-enabled node version or pass userland Promise' + \" implementation as parameter, for example: { Promise: require('bluebird') }\");\n  }\n\n  return new PromisePoolCluster(corePoolCluster, thePromise);\n}\n\nexports.createConnection = createConnection;\nexports.createPool = createPool;\nexports.createPoolCluster = createPoolCluster;\nexports.escape = core.escape;\nexports.escapeId = core.escapeId;\nexports.format = core.format;\nexports.raw = core.raw;\nexports.PromisePool = PromisePool;\nexports.PromiseConnection = PromiseConnection;\nexports.PromisePoolConnection = PromisePoolConnection;","map":{"version":3,"sources":["/root/Test/node_modules/mysql2/promise.js"],"names":["core","require","EventEmitter","makeDoneCb","resolve","reject","localErr","err","rows","fields","message","code","errno","sql","sqlState","sqlMessage","inheritEvents","source","target","events","listeners","on","eventName","indexOf","listenerCount","args","slice","call","arguments","unshift","emit","apply","removeListener","PromisePreparedStatementInfo","statement","promiseImpl","Promise","parameters","s","Error","done","execute","close","PromiseConnection","connection","release","query","params","c","undefined","end","beginTransaction","commit","rollback","ping","connect","param","options","prepare","wrappedStatement","changeUser","config","threadId","createConnection","opts","coreConnection","createConnectionErr","thePromise","once","functionsToWrap","i","length","func","Connection","prototype","factory","funcName","PromisePoolConnection","PoolConnection","destroy","PromisePool","pool","corePool","getConnection","createPool","Pool","PromisePoolCluster","poolCluster","corePoolCluster","pattern","selector","of","PoolCluster","createPoolCluster","exports","escape","escapeId","format","raw"],"mappings":"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","sourcesContent":["'use strict';\n\nconst core = require('./index.js');\nconst EventEmitter = require('events').EventEmitter;\n\nfunction makeDoneCb(resolve, reject, localErr) {\n  return function (err, rows, fields) {\n    if (err) {\n      localErr.message = err.message;\n      localErr.code = err.code;\n      localErr.errno = err.errno;\n      localErr.sql = err.sql;\n      localErr.sqlState = err.sqlState;\n      localErr.sqlMessage = err.sqlMessage;\n      reject(localErr);\n    } else {\n      resolve([rows, fields]);\n    }\n  };\n}\n\nfunction inheritEvents(source, target, events) {\n  const listeners = {};\n  target\n    .on('newListener', eventName => {\n      if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n        source.on(\n          eventName,\n          (listeners[eventName] = function () {\n            const args = [].slice.call(arguments);\n            args.unshift(eventName);\n\n            target.emit.apply(target, args);\n          })\n        );\n      }\n    })\n    .on('removeListener', eventName => {\n      if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n        source.removeListener(eventName, listeners[eventName]);\n        delete listeners[eventName];\n      }\n    });\n}\n\nclass PromisePreparedStatementInfo {\n  constructor(statement, promiseImpl) {\n    this.statement = statement;\n    this.Promise = promiseImpl;\n  }\n\n  execute(parameters) {\n    const s = this.statement;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (parameters) {\n        s.execute(parameters, done);\n      } else {\n        s.execute(done);\n      }\n    });\n  }\n\n  close() {\n    return new this.Promise(resolve => {\n      this.statement.close();\n      resolve();\n    });\n  }\n}\n\nclass PromiseConnection extends EventEmitter {\n  constructor(connection, promiseImpl) {\n    super();\n    this.connection = connection;\n    this.Promise = promiseImpl || Promise;\n    inheritEvents(connection, this, [\n      'error',\n      'drain',\n      'connect',\n      'end',\n      'enqueue'\n    ]);\n  }\n\n  release() {\n    this.connection.release();\n  }\n\n  query(query, params) {\n    const c = this.connection;\n    const localErr = new Error();\n    if (typeof params === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (params !== undefined) {\n        c.query(query, params, done);\n      } else {\n        c.query(query, done);\n      }\n    });\n  }\n\n  execute(query, params) {\n    const c = this.connection;\n    const localErr = new Error();\n    if (typeof params === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (params !== undefined) {\n        c.execute(query, params, done);\n      } else {\n        c.execute(query, done);\n      }\n    });\n  }\n\n  end() {\n    return new this.Promise(resolve => {\n      this.connection.end(resolve);\n    });\n  }\n\n  beginTransaction() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.beginTransaction(done);\n    });\n  }\n\n  commit() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.commit(done);\n    });\n  }\n\n  rollback() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.rollback(done);\n    });\n  }\n\n  ping() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.ping(done);\n    });\n  }\n\n  connect() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.connect((err, param) => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve(param);\n        }\n      });\n    });\n  }\n\n  prepare(options) {\n    const c = this.connection;\n    const promiseImpl = this.Promise;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.prepare(options, (err, statement) => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          const wrappedStatement = new PromisePreparedStatementInfo(\n            statement,\n            promiseImpl\n          );\n          resolve(wrappedStatement);\n        }\n      });\n    });\n  }\n\n  changeUser(options) {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.changeUser(options, err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  get config() {\n    return this.connection.config;\n  }\n\n  get threadId() {\n    return this.connection.threadId;\n  }\n}\n\nfunction createConnection(opts) {\n  const coreConnection = core.createConnection(opts);\n  const createConnectionErr = new Error();\n  const thePromise = opts.Promise || Promise;\n  if (!thePromise) {\n    throw new Error(\n      'no Promise implementation available.' +\n      'Use promise-enabled node version or pass userland Promise' +\n      \" implementation as parameter, for example: { Promise: require('bluebird') }\"\n    );\n  }\n  return new thePromise((resolve, reject) => {\n    coreConnection.once('connect', () => {\n      resolve(new PromiseConnection(coreConnection, thePromise));\n    });\n    coreConnection.once('error', err => {\n      createConnectionErr.message = err.message;\n      createConnectionErr.code = err.code;\n      createConnectionErr.errno = err.errno;\n      createConnectionErr.sqlState = err.sqlState;\n      reject(createConnectionErr);\n    });\n  });\n}\n\n// note: the callback of \"changeUser\" is not called on success\n// hence there is no possibility to call \"resolve\"\n\n// patching PromiseConnection\n// create facade functions for prototype functions on \"Connection\" that are not yet\n// implemented with PromiseConnection\n\n// proxy synchronous functions only\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n\n    if (\n      typeof core.Connection.prototype[func] === 'function' &&\n      PromiseConnection.prototype[func] === undefined\n    ) {\n      PromiseConnection.prototype[func] = (function factory(funcName) {\n        return function () {\n          return core.Connection.prototype[funcName].apply(\n            this.connection,\n            arguments\n          );\n        };\n      })(func);\n    }\n  }\n})([\n  // synchronous functions\n  'close',\n  'createBinlogStream',\n  'destroy',\n  'escape',\n  'escapeId',\n  'format',\n  'pause',\n  'pipe',\n  'resume',\n  'unprepare'\n]);\n\nclass PromisePoolConnection extends PromiseConnection {\n  constructor(connection, promiseImpl) {\n    super(connection, promiseImpl);\n  }\n\n  destroy() {\n    return core.PoolConnection.prototype.destroy.apply(\n      this.connection,\n      arguments\n    );\n  }\n}\n\nclass PromisePool extends EventEmitter {\n  constructor(pool, thePromise) {\n    super();\n    this.pool = pool;\n    this.Promise = thePromise || Promise;\n    inheritEvents(pool, this, ['acquire', 'connection', 'enqueue', 'release']);\n  }\n\n  getConnection() {\n    const corePool = this.pool;\n    return new this.Promise((resolve, reject) => {\n      corePool.getConnection((err, coreConnection) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\n        }\n      });\n    });\n  }\n\n  query(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (args !== undefined) {\n        corePool.query(sql, args, done);\n      } else {\n        corePool.query(sql, done);\n      }\n    });\n  }\n\n  execute(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (args) {\n        corePool.execute(sql, args, done);\n      } else {\n        corePool.execute(sql, done);\n      }\n    });\n  }\n\n  end() {\n    const corePool = this.pool;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      corePool.end(err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n}\n\nfunction createPool(opts) {\n  const corePool = core.createPool(opts);\n  const thePromise = opts.Promise || Promise;\n  if (!thePromise) {\n    throw new Error(\n      'no Promise implementation available.' +\n      'Use promise-enabled node version or pass userland Promise' +\n      \" implementation as parameter, for example: { Promise: require('bluebird') }\"\n    );\n  }\n\n  return new PromisePool(corePool, thePromise);\n}\n\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n\n    if (\n      typeof core.Pool.prototype[func] === 'function' &&\n      PromisePool.prototype[func] === undefined\n    ) {\n      PromisePool.prototype[func] = (function factory(funcName) {\n        return function () {\n          return core.Pool.prototype[funcName].apply(this.pool, arguments);\n        };\n      })(func);\n    }\n  }\n})([\n  // synchronous functions\n  'escape',\n  'escapeId',\n  'format'\n]);\n\nclass PromisePoolCluster extends EventEmitter {\n  constructor(poolCluster, thePromise) {\n    super();\n    this.poolCluster = poolCluster;\n    this.Promise = thePromise || Promise;\n    inheritEvents(poolCluster, this, ['acquire', 'connection', 'enqueue', 'release']);\n  }\n\n  getConnection() {\n    const corePoolCluster = this.poolCluster;\n    return new this.Promise((resolve, reject) => {\n      corePoolCluster.getConnection((err, coreConnection) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\n        }\n      });\n    });\n  }\n\n  query(sql, args) {\n    const corePoolCluster = this.poolCluster;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      corePoolCluster.query(sql, args, done);\n    });\n  }\n\n  execute(sql, args) {\n    const corePoolCluster = this.poolCluster;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      corePoolCluster.execute(sql, args, done);\n    });\n  }\n\n  of(pattern, selector) {\n    return new PromisePoolCluster(\n      this.poolCluster.of(pattern, selector),\n      this.Promise\n    );\n  }\n\n  end() {\n    const corePoolCluster = this.poolCluster;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      corePoolCluster.end(err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n}\n\n/**\n * proxy poolCluster synchronous functions\n */\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n\n    if (\n      typeof core.PoolCluster.prototype[func] === 'function' &&\n      PromisePoolCluster.prototype[func] === undefined\n    ) {\n      PromisePoolCluster.prototype[func] = (function factory(funcName) {\n        return function () {\n          return core.PoolCluster.prototype[funcName].apply(this.poolCluster, arguments);\n        };\n      })(func);\n    }\n  }\n})([\n  'add'\n]);\n\nfunction createPoolCluster(opts) {\n  const corePoolCluster = core.createPoolCluster(opts);\n  const thePromise = (opts && opts.Promise) || Promise;\n  if (!thePromise) {\n    throw new Error(\n      'no Promise implementation available.' +\n      'Use promise-enabled node version or pass userland Promise' +\n      \" implementation as parameter, for example: { Promise: require('bluebird') }\"\n    );\n  }\n  return new PromisePoolCluster(corePoolCluster, thePromise);\n}\n\nexports.createConnection = createConnection;\nexports.createPool = createPool;\nexports.createPoolCluster = createPoolCluster;\nexports.escape = core.escape;\nexports.escapeId = core.escapeId;\nexports.format = core.format;\nexports.raw = core.raw;\nexports.PromisePool = PromisePool;\nexports.PromiseConnection = PromiseConnection;\nexports.PromisePoolConnection = PromisePoolConnection;\n"]},"metadata":{},"sourceType":"script"}