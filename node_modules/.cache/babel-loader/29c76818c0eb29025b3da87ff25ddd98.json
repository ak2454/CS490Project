{"ast":null,"code":"var _objectSpread = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar sql = require(\"./db.js\"); // constructor\n\n\nvar User = function User(user) {\n  this.email = user.email;\n  this.password = user.password;\n};\n\nUser.create = function (newUser, result) {\n  sql.query(\"INSERT INTO users SET ?\", newUser, function (err, res) {\n    if (err) {\n      console.log(\"error: \", err);\n      result(err, null);\n      return;\n    }\n\n    console.log(\"created User: \", _objectSpread({\n      id: res.insertId\n    }, newUser));\n    result(null, _objectSpread({\n      id: res.insertId\n    }, newUser));\n  });\n};\n\nUser.findById = function (userId, result) {\n  sql.query(\"SELECT * FROM users WHERE id = \".concat(userId), function (err, res) {\n    if (err) {\n      console.log(\"error: \", err);\n      result(err, null);\n      return;\n    }\n\n    if (res.length) {\n      console.log(\"found user: \", res[0]);\n      result(null, res[0]);\n      return;\n    } // not found user with the id\n\n\n    result({\n      kind: \"not_found\"\n    }, null);\n  });\n};\n\nUser.getAll = function (result) {\n  sql.query(\"SELECT * FROM users\", function (err, res) {\n    if (err) {\n      console.log(\"error: \", err);\n      result(null, err);\n      return;\n    }\n\n    console.log(\"users: \", res);\n    result(null, res);\n  });\n};\n\nUser.updateById = function (id, user, result) {\n  sql.query(\"UPDATE users SET email = ?, password = ? WHERE id = ?\", [user.email, user.password, id], function (err, res) {\n    if (err) {\n      console.log(\"error: \", err);\n      result(null, err);\n      return;\n    }\n\n    if (res.affectedRows == 0) {\n      // not found Customer with the id\n      result({\n        kind: \"not_found\"\n      }, null);\n      return;\n    }\n\n    console.log(\"updated user: \", _objectSpread({\n      id: id\n    }, user));\n    result(null, _objectSpread({\n      id: id\n    }, user));\n  });\n};\n\nUser.remove = function (id, result) {\n  sql.query(\"DELETE FROM users WHERE id = ?\", id, function (err, res) {\n    if (err) {\n      console.log(\"error: \", err);\n      result(null, err);\n      return;\n    }\n\n    if (res.affectedRows == 0) {\n      // not found Customer with the id\n      result({\n        kind: \"not_found\"\n      }, null);\n      return;\n    }\n\n    console.log(\"deleted user with id: \", id);\n    result(null, res);\n  });\n};\n\nUser.removeAll = function (result) {\n  sql.query(\"DELETE FROM users\", function (err, res) {\n    if (err) {\n      console.log(\"error: \", err);\n      result(null, err);\n      return;\n    }\n\n    console.log(\"deleted \".concat(res.affectedRows, \" users\"));\n    result(null, res);\n  });\n};\n\nmodule.exports = User;","map":{"version":3,"sources":["/root/Test/app/models/customer.model.js"],"names":["sql","require","User","user","email","password","create","newUser","result","query","err","res","console","log","id","insertId","findById","userId","length","kind","getAll","updateById","affectedRows","remove","removeAll","module","exports"],"mappings":"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","sourcesContent":["const sql = require(\"./db.js\");\n\n// constructor\nconst User = function(user) {\n  this.email = user.email;\n  this.password = user.password;\n};\n\nUser.create = (newUser, result) => {\n  sql.query(\"INSERT INTO users SET ?\", newUser, (err, res) => {\n    if (err) {\n      console.log(\"error: \", err);\n      result(err, null);\n      return;\n    }\n\n    console.log(\"created User: \", { id: res.insertId, ...newUser });\n    result(null, { id: res.insertId, ...newUser });\n  });\n};\n\nUser.findById = (userId, result) => {\n  sql.query(`SELECT * FROM users WHERE id = ${userId}`, (err, res) => {\n    if (err) {\n      console.log(\"error: \", err);\n      result(err, null);\n      return;\n    }\n\n    if (res.length) {\n      console.log(\"found user: \", res[0]);\n      result(null, res[0]);\n      return;\n    }\n\n    // not found user with the id\n    result({ kind: \"not_found\" }, null);\n  });\n};\n\nUser.getAll = result => {\n  sql.query(\"SELECT * FROM users\", (err, res) => {\n    if (err) {\n      console.log(\"error: \", err);\n      result(null, err);\n      return;\n    }\n\n    console.log(\"users: \", res);\n    result(null, res);\n  });\n};\n\nUser.updateById = (id, user, result) => {\n  sql.query(\n    \"UPDATE users SET email = ?, password = ? WHERE id = ?\",\n    [user.email, user.password, id],\n    (err, res) => {\n      if (err) {\n        console.log(\"error: \", err);\n        result(null, err);\n        return;\n      }\n\n      if (res.affectedRows == 0) {\n        // not found Customer with the id\n        result({ kind: \"not_found\" }, null);\n        return;\n      }\n\n      console.log(\"updated user: \", { id: id, ...user });\n      result(null, { id: id, ...user });\n    }\n  );\n};\n\nUser.remove = (id, result) => {\n  sql.query(\"DELETE FROM users WHERE id = ?\", id, (err, res) => {\n    if (err) {\n      console.log(\"error: \", err);\n      result(null, err);\n      return;\n    }\n\n    if (res.affectedRows == 0) {\n      // not found Customer with the id\n      result({ kind: \"not_found\" }, null);\n      return;\n    }\n\n    console.log(\"deleted user with id: \", id);\n    result(null, res);\n  });\n};\n\nUser.removeAll = result => {\n  sql.query(\"DELETE FROM users\", (err, res) => {\n    if (err) {\n      console.log(\"error: \", err);\n      result(null, err);\n      return;\n    }\n\n    console.log(`deleted ${res.affectedRows} users`);\n    result(null, res);\n  });\n};\n\nmodule.exports = User;\n"]},"metadata":{},"sourceType":"script"}