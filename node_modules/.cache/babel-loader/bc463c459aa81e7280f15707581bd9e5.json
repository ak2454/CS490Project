{"ast":null,"code":"'use strict'; // http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\n\nvar _classCallCheck = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Packet = require('../packets/packet');\n\nvar AuthSwitchRequestMoreData = /*#__PURE__*/function () {\n  function AuthSwitchRequestMoreData(data) {\n    _classCallCheck(this, AuthSwitchRequestMoreData);\n\n    this.data = data;\n  }\n\n  _createClass(AuthSwitchRequestMoreData, [{\n    key: \"toPacket\",\n    value: function toPacket() {\n      var length = 5 + this.data.length;\n      var buffer = Buffer.allocUnsafe(length);\n      var packet = new Packet(0, buffer, 0, length);\n      packet.offset = 4;\n      packet.writeInt8(0x01);\n      packet.writeBuffer(this.data);\n      return packet;\n    }\n  }], [{\n    key: \"fromPacket\",\n    value: function fromPacket(packet) {\n      packet.readInt8(); // marker\n\n      var data = packet.readBuffer();\n      return new AuthSwitchRequestMoreData(data);\n    }\n  }, {\n    key: \"verifyMarker\",\n    value: function verifyMarker(packet) {\n      return packet.peekByte() === 0x01;\n    }\n  }]);\n\n  return AuthSwitchRequestMoreData;\n}();\n\nmodule.exports = AuthSwitchRequestMoreData;","map":{"version":3,"sources":["/root/Test/node_modules/mysql2/lib/packets/auth_switch_request_more_data.js"],"names":["Packet","require","AuthSwitchRequestMoreData","data","length","buffer","Buffer","allocUnsafe","packet","offset","writeInt8","writeBuffer","readInt8","readBuffer","peekByte","module","exports"],"mappings":"AAAA,a,CAEA;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAAtB;;IAEMC,yB;AACJ,qCAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKA,IAAL,GAAYA,IAAZ;AACD;;;;WAED,oBAAW;AACT,UAAMC,MAAM,GAAG,IAAI,KAAKD,IAAL,CAAUC,MAA7B;AACA,UAAMC,MAAM,GAAGC,MAAM,CAACC,WAAP,CAAmBH,MAAnB,CAAf;AACA,UAAMI,MAAM,GAAG,IAAIR,MAAJ,CAAW,CAAX,EAAcK,MAAd,EAAsB,CAAtB,EAAyBD,MAAzB,CAAf;AACAI,MAAAA,MAAM,CAACC,MAAP,GAAgB,CAAhB;AACAD,MAAAA,MAAM,CAACE,SAAP,CAAiB,IAAjB;AACAF,MAAAA,MAAM,CAACG,WAAP,CAAmB,KAAKR,IAAxB;AACA,aAAOK,MAAP;AACD;;;WAED,oBAAkBA,MAAlB,EAA0B;AACxBA,MAAAA,MAAM,CAACI,QAAP,GADwB,CACL;;AACnB,UAAMT,IAAI,GAAGK,MAAM,CAACK,UAAP,EAAb;AACA,aAAO,IAAIX,yBAAJ,CAA8BC,IAA9B,CAAP;AACD;;;WAED,sBAAoBK,MAApB,EAA4B;AAC1B,aAAOA,MAAM,CAACM,QAAP,OAAsB,IAA7B;AACD;;;;;;AAGHC,MAAM,CAACC,OAAP,GAAiBd,yBAAjB","sourcesContent":["'use strict';\n\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\n\nconst Packet = require('../packets/packet');\n\nclass AuthSwitchRequestMoreData {\n  constructor(data) {\n    this.data = data;\n  }\n\n  toPacket() {\n    const length = 5 + this.data.length;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0x01);\n    packet.writeBuffer(this.data);\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    packet.readInt8(); // marker\n    const data = packet.readBuffer();\n    return new AuthSwitchRequestMoreData(data);\n  }\n\n  static verifyMarker(packet) {\n    return packet.peekByte() === 0x01;\n  }\n}\n\nmodule.exports = AuthSwitchRequestMoreData;\n"]},"metadata":{},"sourceType":"script"}