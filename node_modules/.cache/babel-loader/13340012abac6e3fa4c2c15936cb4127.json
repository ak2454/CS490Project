{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Command = require('./command.js');\n\nvar Packets = require('../packets/index.js');\n\nvar ClientHandshake = require('./client_handshake.js');\n\nvar CharsetToEncoding = require('../constants/charset_encodings.js');\n\nvar ChangeUser = /*#__PURE__*/function (_Command) {\n  _inherits(ChangeUser, _Command);\n\n  var _super = _createSuper(ChangeUser);\n\n  function ChangeUser(options, callback) {\n    var _this;\n\n    _classCallCheck(this, ChangeUser);\n\n    _this = _super.call(this);\n    _this.onResult = callback;\n    _this.user = options.user;\n    _this.password = options.password;\n    _this.database = options.database;\n    _this.passwordSha1 = options.passwordSha1;\n    _this.charsetNumber = options.charsetNumber;\n    _this.currentConfig = options.currentConfig;\n    return _this;\n  }\n\n  _createClass(ChangeUser, [{\n    key: \"start\",\n    value: function start(packet, connection) {\n      var newPacket = new Packets.ChangeUser({\n        flags: connection.config.clientFlags,\n        user: this.user,\n        database: this.database,\n        charsetNumber: this.charsetNumber,\n        password: this.password,\n        passwordSha1: this.passwordSha1,\n        authPluginData1: connection._handshakePacket.authPluginData1,\n        authPluginData2: connection._handshakePacket.authPluginData2\n      });\n      this.currentConfig.user = this.user;\n      this.currentConfig.password = this.password;\n      this.currentConfig.database = this.database;\n      this.currentConfig.charsetNumber = this.charsetNumber;\n      connection.clientEncoding = CharsetToEncoding[this.charsetNumber]; // reset prepared statements cache as all statements become invalid after changeUser\n\n      connection._statements.reset();\n\n      connection.writePacket(newPacket.toPacket());\n      return ChangeUser.prototype.handshakeResult;\n    }\n  }]);\n\n  return ChangeUser;\n}(Command);\n\nChangeUser.prototype.handshakeResult = ClientHandshake.prototype.handshakeResult;\nChangeUser.prototype.calculateNativePasswordAuthToken = ClientHandshake.prototype.calculateNativePasswordAuthToken;\nmodule.exports = ChangeUser;","map":{"version":3,"sources":["/root/Test/node_modules/mysql2/lib/commands/change_user.js"],"names":["Command","require","Packets","ClientHandshake","CharsetToEncoding","ChangeUser","options","callback","onResult","user","password","database","passwordSha1","charsetNumber","currentConfig","packet","connection","newPacket","flags","config","clientFlags","authPluginData1","_handshakePacket","authPluginData2","clientEncoding","_statements","reset","writePacket","toPacket","prototype","handshakeResult","calculateNativePasswordAuthToken","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAME,eAAe,GAAGF,OAAO,CAAC,uBAAD,CAA/B;;AACA,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,mCAAD,CAAjC;;IAEMI,U;;;;;AACJ,sBAAYC,OAAZ,EAAqBC,QAArB,EAA+B;AAAA;;AAAA;;AAC7B;AACA,UAAKC,QAAL,GAAgBD,QAAhB;AACA,UAAKE,IAAL,GAAYH,OAAO,CAACG,IAApB;AACA,UAAKC,QAAL,GAAgBJ,OAAO,CAACI,QAAxB;AACA,UAAKC,QAAL,GAAgBL,OAAO,CAACK,QAAxB;AACA,UAAKC,YAAL,GAAoBN,OAAO,CAACM,YAA5B;AACA,UAAKC,aAAL,GAAqBP,OAAO,CAACO,aAA7B;AACA,UAAKC,aAAL,GAAqBR,OAAO,CAACQ,aAA7B;AAR6B;AAS9B;;;;WACD,eAAMC,MAAN,EAAcC,UAAd,EAA0B;AACxB,UAAMC,SAAS,GAAG,IAAIf,OAAO,CAACG,UAAZ,CAAuB;AACvCa,QAAAA,KAAK,EAAEF,UAAU,CAACG,MAAX,CAAkBC,WADc;AAEvCX,QAAAA,IAAI,EAAE,KAAKA,IAF4B;AAGvCE,QAAAA,QAAQ,EAAE,KAAKA,QAHwB;AAIvCE,QAAAA,aAAa,EAAE,KAAKA,aAJmB;AAKvCH,QAAAA,QAAQ,EAAE,KAAKA,QALwB;AAMvCE,QAAAA,YAAY,EAAE,KAAKA,YANoB;AAOvCS,QAAAA,eAAe,EAAEL,UAAU,CAACM,gBAAX,CAA4BD,eAPN;AAQvCE,QAAAA,eAAe,EAAEP,UAAU,CAACM,gBAAX,CAA4BC;AARN,OAAvB,CAAlB;AAUA,WAAKT,aAAL,CAAmBL,IAAnB,GAA0B,KAAKA,IAA/B;AACA,WAAKK,aAAL,CAAmBJ,QAAnB,GAA8B,KAAKA,QAAnC;AACA,WAAKI,aAAL,CAAmBH,QAAnB,GAA8B,KAAKA,QAAnC;AACA,WAAKG,aAAL,CAAmBD,aAAnB,GAAmC,KAAKA,aAAxC;AACAG,MAAAA,UAAU,CAACQ,cAAX,GAA4BpB,iBAAiB,CAAC,KAAKS,aAAN,CAA7C,CAfwB,CAgBxB;;AACAG,MAAAA,UAAU,CAACS,WAAX,CAAuBC,KAAvB;;AACAV,MAAAA,UAAU,CAACW,WAAX,CAAuBV,SAAS,CAACW,QAAV,EAAvB;AACA,aAAOvB,UAAU,CAACwB,SAAX,CAAqBC,eAA5B;AACD;;;;EA/BsB9B,O;;AAkCzBK,UAAU,CAACwB,SAAX,CAAqBC,eAArB,GACE3B,eAAe,CAAC0B,SAAhB,CAA0BC,eAD5B;AAEAzB,UAAU,CAACwB,SAAX,CAAqBE,gCAArB,GACE5B,eAAe,CAAC0B,SAAhB,CAA0BE,gCAD5B;AAGAC,MAAM,CAACC,OAAP,GAAiB5B,UAAjB","sourcesContent":["'use strict';\n\nconst Command = require('./command.js');\nconst Packets = require('../packets/index.js');\nconst ClientHandshake = require('./client_handshake.js');\nconst CharsetToEncoding = require('../constants/charset_encodings.js');\n\nclass ChangeUser extends Command {\n  constructor(options, callback) {\n    super();\n    this.onResult = callback;\n    this.user = options.user;\n    this.password = options.password;\n    this.database = options.database;\n    this.passwordSha1 = options.passwordSha1;\n    this.charsetNumber = options.charsetNumber;\n    this.currentConfig = options.currentConfig;\n  }\n  start(packet, connection) {\n    const newPacket = new Packets.ChangeUser({\n      flags: connection.config.clientFlags,\n      user: this.user,\n      database: this.database,\n      charsetNumber: this.charsetNumber,\n      password: this.password,\n      passwordSha1: this.passwordSha1,\n      authPluginData1: connection._handshakePacket.authPluginData1,\n      authPluginData2: connection._handshakePacket.authPluginData2\n    });\n    this.currentConfig.user = this.user;\n    this.currentConfig.password = this.password;\n    this.currentConfig.database = this.database;\n    this.currentConfig.charsetNumber = this.charsetNumber;\n    connection.clientEncoding = CharsetToEncoding[this.charsetNumber];\n    // reset prepared statements cache as all statements become invalid after changeUser\n    connection._statements.reset();\n    connection.writePacket(newPacket.toPacket());\n    return ChangeUser.prototype.handshakeResult;\n  }\n}\n\nChangeUser.prototype.handshakeResult =\n  ClientHandshake.prototype.handshakeResult;\nChangeUser.prototype.calculateNativePasswordAuthToken =\n  ClientHandshake.prototype.calculateNativePasswordAuthToken;\n\nmodule.exports = ChangeUser;\n"]},"metadata":{},"sourceType":"script"}