{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Packet = require('../packets/packet');\n\nvar ClientConstants = require('../constants/client.js'); // https://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::Handshake\n\n\nvar Handshake = /*#__PURE__*/function () {\n  function Handshake(args) {\n    _classCallCheck(this, Handshake);\n\n    this.protocolVersion = args.protocolVersion;\n    this.serverVersion = args.serverVersion;\n    this.capabilityFlags = args.capabilityFlags;\n    this.connectionId = args.connectionId;\n    this.authPluginData1 = args.authPluginData1;\n    this.authPluginData2 = args.authPluginData2;\n    this.characterSet = args.characterSet;\n    this.statusFlags = args.statusFlags;\n    this.autPluginName = args.autPluginName;\n  }\n\n  _createClass(Handshake, [{\n    key: \"setScrambleData\",\n    value: function setScrambleData(cb) {\n      var _this = this;\n\n      require('crypto').randomBytes(20, function (err, data) {\n        if (err) {\n          cb(err);\n          return;\n        }\n\n        _this.authPluginData1 = data.slice(0, 8);\n        _this.authPluginData2 = data.slice(8, 20);\n        cb();\n      });\n    }\n  }, {\n    key: \"toPacket\",\n    value: function toPacket(sequenceId) {\n      var length = 68 + Buffer.byteLength(this.serverVersion, 'utf8');\n      var buffer = Buffer.alloc(length + 4, 0); // zero fill, 10 bytes filler later needs to contain zeros\n\n      var packet = new Packet(sequenceId, buffer, 0, length + 4);\n      packet.offset = 4;\n      packet.writeInt8(this.protocolVersion);\n      packet.writeString(this.serverVersion, 'cesu8');\n      packet.writeInt8(0);\n      packet.writeInt32(this.connectionId);\n      packet.writeBuffer(this.authPluginData1);\n      packet.writeInt8(0);\n      var capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n      capabilityFlagsBuffer.writeUInt32LE(this.capabilityFlags, 0);\n      packet.writeBuffer(capabilityFlagsBuffer.slice(0, 2));\n      packet.writeInt8(this.characterSet);\n      packet.writeInt16(this.statusFlags);\n      packet.writeBuffer(capabilityFlagsBuffer.slice(2, 4));\n      packet.writeInt8(21); // authPluginDataLength\n\n      packet.skip(10);\n      packet.writeBuffer(this.authPluginData2);\n      packet.writeInt8(0);\n      packet.writeString('mysql_native_password', 'latin1');\n      packet.writeInt8(0);\n      return packet;\n    }\n  }], [{\n    key: \"fromPacket\",\n    value: function fromPacket(packet) {\n      var args = {};\n      args.protocolVersion = packet.readInt8();\n      args.serverVersion = packet.readNullTerminatedString('cesu8');\n      args.connectionId = packet.readInt32();\n      args.authPluginData1 = packet.readBuffer(8);\n      packet.skip(1);\n      var capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n      capabilityFlagsBuffer[0] = packet.readInt8();\n      capabilityFlagsBuffer[1] = packet.readInt8();\n\n      if (packet.haveMoreData()) {\n        args.characterSet = packet.readInt8();\n        args.statusFlags = packet.readInt16(); // upper 2 bytes\n\n        capabilityFlagsBuffer[2] = packet.readInt8();\n        capabilityFlagsBuffer[3] = packet.readInt8();\n        args.capabilityFlags = capabilityFlagsBuffer.readUInt32LE(0);\n\n        if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n          args.authPluginDataLength = packet.readInt8();\n        } else {\n          args.authPluginDataLength = 0;\n          packet.skip(1);\n        }\n\n        packet.skip(10);\n      } else {\n        args.capabilityFlags = capabilityFlagsBuffer.readUInt16LE(0);\n      }\n\n      var isSecureConnection = args.capabilityFlags & ClientConstants.SECURE_CONNECTION;\n\n      if (isSecureConnection) {\n        var authPluginDataLength = args.authPluginDataLength;\n\n        if (authPluginDataLength === 0) {\n          // for Secure Password Authentication\n          args.authPluginDataLength = 20;\n          args.authPluginData2 = packet.readBuffer(12);\n          packet.skip(1);\n        } else {\n          // length > 0\n          // for Custom Auth Plugin (PLUGIN_AUTH)\n          var len = Math.max(13, authPluginDataLength - 8);\n          args.authPluginData2 = packet.readBuffer(len);\n        }\n      }\n\n      if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n        args.autPluginName = packet.readNullTerminatedString('ascii');\n      }\n\n      return new Handshake(args);\n    }\n  }]);\n\n  return Handshake;\n}();\n\nmodule.exports = Handshake;","map":{"version":3,"sources":["/root/Test/node_modules/mysql2/lib/packets/handshake.js"],"names":["Packet","require","ClientConstants","Handshake","args","protocolVersion","serverVersion","capabilityFlags","connectionId","authPluginData1","authPluginData2","characterSet","statusFlags","autPluginName","cb","randomBytes","err","data","slice","sequenceId","length","Buffer","byteLength","buffer","alloc","packet","offset","writeInt8","writeString","writeInt32","writeBuffer","capabilityFlagsBuffer","allocUnsafe","writeUInt32LE","writeInt16","skip","readInt8","readNullTerminatedString","readInt32","readBuffer","haveMoreData","readInt16","readUInt32LE","PLUGIN_AUTH","authPluginDataLength","readUInt16LE","isSecureConnection","SECURE_CONNECTION","len","Math","max","module","exports"],"mappings":"AAAA;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAAtB;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,wBAAD,CAA/B,C,CAEA;;;IAEME,S;AACJ,qBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,eAAL,GAAuBD,IAAI,CAACC,eAA5B;AACA,SAAKC,aAAL,GAAqBF,IAAI,CAACE,aAA1B;AACA,SAAKC,eAAL,GAAuBH,IAAI,CAACG,eAA5B;AACA,SAAKC,YAAL,GAAoBJ,IAAI,CAACI,YAAzB;AACA,SAAKC,eAAL,GAAuBL,IAAI,CAACK,eAA5B;AACA,SAAKC,eAAL,GAAuBN,IAAI,CAACM,eAA5B;AACA,SAAKC,YAAL,GAAoBP,IAAI,CAACO,YAAzB;AACA,SAAKC,WAAL,GAAmBR,IAAI,CAACQ,WAAxB;AACA,SAAKC,aAAL,GAAqBT,IAAI,CAACS,aAA1B;AACD;;;;WAED,yBAAgBC,EAAhB,EAAoB;AAAA;;AAClBb,MAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBc,WAAlB,CAA8B,EAA9B,EAAkC,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC/C,YAAID,GAAJ,EAAS;AACPF,UAAAA,EAAE,CAACE,GAAD,CAAF;AACA;AACD;;AACD,QAAA,KAAI,CAACP,eAAL,GAAuBQ,IAAI,CAACC,KAAL,CAAW,CAAX,EAAc,CAAd,CAAvB;AACA,QAAA,KAAI,CAACR,eAAL,GAAuBO,IAAI,CAACC,KAAL,CAAW,CAAX,EAAc,EAAd,CAAvB;AACAJ,QAAAA,EAAE;AACH,OARD;AASD;;;WAED,kBAASK,UAAT,EAAqB;AACnB,UAAMC,MAAM,GAAG,KAAKC,MAAM,CAACC,UAAP,CAAkB,KAAKhB,aAAvB,EAAsC,MAAtC,CAApB;AACA,UAAMiB,MAAM,GAAGF,MAAM,CAACG,KAAP,CAAaJ,MAAM,GAAG,CAAtB,EAAyB,CAAzB,CAAf,CAFmB,CAEyB;;AAC5C,UAAMK,MAAM,GAAG,IAAIzB,MAAJ,CAAWmB,UAAX,EAAuBI,MAAvB,EAA+B,CAA/B,EAAkCH,MAAM,GAAG,CAA3C,CAAf;AACAK,MAAAA,MAAM,CAACC,MAAP,GAAgB,CAAhB;AACAD,MAAAA,MAAM,CAACE,SAAP,CAAiB,KAAKtB,eAAtB;AACAoB,MAAAA,MAAM,CAACG,WAAP,CAAmB,KAAKtB,aAAxB,EAAuC,OAAvC;AACAmB,MAAAA,MAAM,CAACE,SAAP,CAAiB,CAAjB;AACAF,MAAAA,MAAM,CAACI,UAAP,CAAkB,KAAKrB,YAAvB;AACAiB,MAAAA,MAAM,CAACK,WAAP,CAAmB,KAAKrB,eAAxB;AACAgB,MAAAA,MAAM,CAACE,SAAP,CAAiB,CAAjB;AACA,UAAMI,qBAAqB,GAAGV,MAAM,CAACW,WAAP,CAAmB,CAAnB,CAA9B;AACAD,MAAAA,qBAAqB,CAACE,aAAtB,CAAoC,KAAK1B,eAAzC,EAA0D,CAA1D;AACAkB,MAAAA,MAAM,CAACK,WAAP,CAAmBC,qBAAqB,CAACb,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B,CAAnB;AACAO,MAAAA,MAAM,CAACE,SAAP,CAAiB,KAAKhB,YAAtB;AACAc,MAAAA,MAAM,CAACS,UAAP,CAAkB,KAAKtB,WAAvB;AACAa,MAAAA,MAAM,CAACK,WAAP,CAAmBC,qBAAqB,CAACb,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B,CAAnB;AACAO,MAAAA,MAAM,CAACE,SAAP,CAAiB,EAAjB,EAjBmB,CAiBG;;AACtBF,MAAAA,MAAM,CAACU,IAAP,CAAY,EAAZ;AACAV,MAAAA,MAAM,CAACK,WAAP,CAAmB,KAAKpB,eAAxB;AACAe,MAAAA,MAAM,CAACE,SAAP,CAAiB,CAAjB;AACAF,MAAAA,MAAM,CAACG,WAAP,CAAmB,uBAAnB,EAA4C,QAA5C;AACAH,MAAAA,MAAM,CAACE,SAAP,CAAiB,CAAjB;AACA,aAAOF,MAAP;AACD;;;WAED,oBAAkBA,MAAlB,EAA0B;AACxB,UAAMrB,IAAI,GAAG,EAAb;AACAA,MAAAA,IAAI,CAACC,eAAL,GAAuBoB,MAAM,CAACW,QAAP,EAAvB;AACAhC,MAAAA,IAAI,CAACE,aAAL,GAAqBmB,MAAM,CAACY,wBAAP,CAAgC,OAAhC,CAArB;AACAjC,MAAAA,IAAI,CAACI,YAAL,GAAoBiB,MAAM,CAACa,SAAP,EAApB;AACAlC,MAAAA,IAAI,CAACK,eAAL,GAAuBgB,MAAM,CAACc,UAAP,CAAkB,CAAlB,CAAvB;AACAd,MAAAA,MAAM,CAACU,IAAP,CAAY,CAAZ;AACA,UAAMJ,qBAAqB,GAAGV,MAAM,CAACW,WAAP,CAAmB,CAAnB,CAA9B;AACAD,MAAAA,qBAAqB,CAAC,CAAD,CAArB,GAA2BN,MAAM,CAACW,QAAP,EAA3B;AACAL,MAAAA,qBAAqB,CAAC,CAAD,CAArB,GAA2BN,MAAM,CAACW,QAAP,EAA3B;;AACA,UAAIX,MAAM,CAACe,YAAP,EAAJ,EAA2B;AACzBpC,QAAAA,IAAI,CAACO,YAAL,GAAoBc,MAAM,CAACW,QAAP,EAApB;AACAhC,QAAAA,IAAI,CAACQ,WAAL,GAAmBa,MAAM,CAACgB,SAAP,EAAnB,CAFyB,CAGzB;;AACAV,QAAAA,qBAAqB,CAAC,CAAD,CAArB,GAA2BN,MAAM,CAACW,QAAP,EAA3B;AACAL,QAAAA,qBAAqB,CAAC,CAAD,CAArB,GAA2BN,MAAM,CAACW,QAAP,EAA3B;AACAhC,QAAAA,IAAI,CAACG,eAAL,GAAuBwB,qBAAqB,CAACW,YAAtB,CAAmC,CAAnC,CAAvB;;AACA,YAAItC,IAAI,CAACG,eAAL,GAAuBL,eAAe,CAACyC,WAA3C,EAAwD;AACtDvC,UAAAA,IAAI,CAACwC,oBAAL,GAA4BnB,MAAM,CAACW,QAAP,EAA5B;AACD,SAFD,MAEO;AACLhC,UAAAA,IAAI,CAACwC,oBAAL,GAA4B,CAA5B;AACAnB,UAAAA,MAAM,CAACU,IAAP,CAAY,CAAZ;AACD;;AACDV,QAAAA,MAAM,CAACU,IAAP,CAAY,EAAZ;AACD,OAdD,MAcO;AACL/B,QAAAA,IAAI,CAACG,eAAL,GAAuBwB,qBAAqB,CAACc,YAAtB,CAAmC,CAAnC,CAAvB;AACD;;AAED,UAAMC,kBAAkB,GACtB1C,IAAI,CAACG,eAAL,GAAuBL,eAAe,CAAC6C,iBADzC;;AAEA,UAAID,kBAAJ,EAAwB;AACtB,YAAMF,oBAAoB,GAAGxC,IAAI,CAACwC,oBAAlC;;AACA,YAAIA,oBAAoB,KAAK,CAA7B,EAAgC;AAC9B;AACAxC,UAAAA,IAAI,CAACwC,oBAAL,GAA4B,EAA5B;AACAxC,UAAAA,IAAI,CAACM,eAAL,GAAuBe,MAAM,CAACc,UAAP,CAAkB,EAAlB,CAAvB;AACAd,UAAAA,MAAM,CAACU,IAAP,CAAY,CAAZ;AACD,SALD,MAKO;AACL;AACA;AACA,cAAMa,GAAG,GAAGC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaN,oBAAoB,GAAG,CAApC,CAAZ;AACAxC,UAAAA,IAAI,CAACM,eAAL,GAAuBe,MAAM,CAACc,UAAP,CAAkBS,GAAlB,CAAvB;AACD;AACF;;AAED,UAAI5C,IAAI,CAACG,eAAL,GAAuBL,eAAe,CAACyC,WAA3C,EAAwD;AACtDvC,QAAAA,IAAI,CAACS,aAAL,GAAqBY,MAAM,CAACY,wBAAP,CAAgC,OAAhC,CAArB;AACD;;AAED,aAAO,IAAIlC,SAAJ,CAAcC,IAAd,CAAP;AACD;;;;;;AAGH+C,MAAM,CAACC,OAAP,GAAiBjD,SAAjB","sourcesContent":["'use strict';\n\nconst Packet = require('../packets/packet');\nconst ClientConstants = require('../constants/client.js');\n\n// https://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::Handshake\n\nclass Handshake {\n  constructor(args) {\n    this.protocolVersion = args.protocolVersion;\n    this.serverVersion = args.serverVersion;\n    this.capabilityFlags = args.capabilityFlags;\n    this.connectionId = args.connectionId;\n    this.authPluginData1 = args.authPluginData1;\n    this.authPluginData2 = args.authPluginData2;\n    this.characterSet = args.characterSet;\n    this.statusFlags = args.statusFlags;\n    this.autPluginName = args.autPluginName;\n  }\n\n  setScrambleData(cb) {\n    require('crypto').randomBytes(20, (err, data) => {\n      if (err) {\n        cb(err);\n        return;\n      }\n      this.authPluginData1 = data.slice(0, 8);\n      this.authPluginData2 = data.slice(8, 20);\n      cb();\n    });\n  }\n\n  toPacket(sequenceId) {\n    const length = 68 + Buffer.byteLength(this.serverVersion, 'utf8');\n    const buffer = Buffer.alloc(length + 4, 0); // zero fill, 10 bytes filler later needs to contain zeros\n    const packet = new Packet(sequenceId, buffer, 0, length + 4);\n    packet.offset = 4;\n    packet.writeInt8(this.protocolVersion);\n    packet.writeString(this.serverVersion, 'cesu8');\n    packet.writeInt8(0);\n    packet.writeInt32(this.connectionId);\n    packet.writeBuffer(this.authPluginData1);\n    packet.writeInt8(0);\n    const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n    capabilityFlagsBuffer.writeUInt32LE(this.capabilityFlags, 0);\n    packet.writeBuffer(capabilityFlagsBuffer.slice(0, 2));\n    packet.writeInt8(this.characterSet);\n    packet.writeInt16(this.statusFlags);\n    packet.writeBuffer(capabilityFlagsBuffer.slice(2, 4));\n    packet.writeInt8(21); // authPluginDataLength\n    packet.skip(10);\n    packet.writeBuffer(this.authPluginData2);\n    packet.writeInt8(0);\n    packet.writeString('mysql_native_password', 'latin1');\n    packet.writeInt8(0);\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    const args = {};\n    args.protocolVersion = packet.readInt8();\n    args.serverVersion = packet.readNullTerminatedString('cesu8');\n    args.connectionId = packet.readInt32();\n    args.authPluginData1 = packet.readBuffer(8);\n    packet.skip(1);\n    const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n    capabilityFlagsBuffer[0] = packet.readInt8();\n    capabilityFlagsBuffer[1] = packet.readInt8();\n    if (packet.haveMoreData()) {\n      args.characterSet = packet.readInt8();\n      args.statusFlags = packet.readInt16();\n      // upper 2 bytes\n      capabilityFlagsBuffer[2] = packet.readInt8();\n      capabilityFlagsBuffer[3] = packet.readInt8();\n      args.capabilityFlags = capabilityFlagsBuffer.readUInt32LE(0);\n      if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n        args.authPluginDataLength = packet.readInt8();\n      } else {\n        args.authPluginDataLength = 0;\n        packet.skip(1);\n      }\n      packet.skip(10);\n    } else {\n      args.capabilityFlags = capabilityFlagsBuffer.readUInt16LE(0);\n    }\n\n    const isSecureConnection =\n      args.capabilityFlags & ClientConstants.SECURE_CONNECTION;\n    if (isSecureConnection) {\n      const authPluginDataLength = args.authPluginDataLength;\n      if (authPluginDataLength === 0) {\n        // for Secure Password Authentication\n        args.authPluginDataLength = 20;\n        args.authPluginData2 = packet.readBuffer(12);\n        packet.skip(1);\n      } else {\n        // length > 0\n        // for Custom Auth Plugin (PLUGIN_AUTH)\n        const len = Math.max(13, authPluginDataLength - 8);\n        args.authPluginData2 = packet.readBuffer(len);\n      }\n    }\n\n    if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n      args.autPluginName = packet.readNullTerminatedString('ascii');\n    }\n\n    return new Handshake(args);\n  }\n}\n\nmodule.exports = Handshake;\n"]},"metadata":{},"sourceType":"script"}