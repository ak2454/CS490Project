{"ast":null,"code":"import _objectSpread from\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var sql=require(\"./db.js\");// constructor\nvar User=function User(user){this.email=user.email;this.password=user.password;};User.create=function(newUser,result){sql.query(\"INSERT INTO users SET ?\",newUser,function(err,res){if(err){console.log(\"error: \",err);result(err,null);return;}console.log(\"created User: \",_objectSpread({id:res.insertId},newUser));result(null,_objectSpread({id:res.insertId},newUser));});};User.findById=function(userId,result){sql.query(\"SELECT * FROM users WHERE id = \".concat(userId),function(err,res){if(err){console.log(\"error: \",err);result(err,null);return;}if(res.length){console.log(\"found user: \",res[0]);result(null,res[0]);return;}// not found user with the id\nresult({kind:\"not_found\"},null);});};User.getAll=function(result){sql.query(\"SELECT * FROM users\",function(err,res){if(err){console.log(\"error: \",err);result(null,err);return;}console.log(\"users: \",res);result(null,res);});};User.updateById=function(id,user,result){sql.query(\"UPDATE users SET email = ?, password = ? WHERE id = ?\",[user.email,user.password,id],function(err,res){if(err){console.log(\"error: \",err);result(null,err);return;}if(res.affectedRows==0){// not found Customer with the id\nresult({kind:\"not_found\"},null);return;}console.log(\"updated user: \",_objectSpread({id:id},user));result(null,_objectSpread({id:id},user));});};User.remove=function(id,result){sql.query(\"DELETE FROM users WHERE id = ?\",id,function(err,res){if(err){console.log(\"error: \",err);result(null,err);return;}if(res.affectedRows==0){// not found Customer with the id\nresult({kind:\"not_found\"},null);return;}console.log(\"deleted user with id: \",id);result(null,res);});};User.removeAll=function(result){sql.query(\"DELETE FROM users\",function(err,res){if(err){console.log(\"error: \",err);result(null,err);return;}console.log(\"deleted \".concat(res.affectedRows,\" users\"));result(null,res);});};module.exports=User;","map":{"version":3,"sources":["/root/Test/src/app/models/customer.model.js"],"names":["sql","require","User","user","email","password","create","newUser","result","query","err","res","console","log","id","insertId","findById","userId","length","kind","getAll","updateById","affectedRows","remove","removeAll","module","exports"],"mappings":"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","sourcesContent":["const sql = require(\"./db.js\");\n\n// constructor\nconst User = function(user) {\n  this.email = user.email;\n  this.password = user.password;\n};\n\nUser.create = (newUser, result) => {\n  sql.query(\"INSERT INTO users SET ?\", newUser, (err, res) => {\n    if (err) {\n      console.log(\"error: \", err);\n      result(err, null);\n      return;\n    }\n\n    console.log(\"created User: \", { id: res.insertId, ...newUser });\n    result(null, { id: res.insertId, ...newUser });\n  });\n};\n\nUser.findById = (userId, result) => {\n  sql.query(`SELECT * FROM users WHERE id = ${userId}`, (err, res) => {\n    if (err) {\n      console.log(\"error: \", err);\n      result(err, null);\n      return;\n    }\n\n    if (res.length) {\n      console.log(\"found user: \", res[0]);\n      result(null, res[0]);\n      return;\n    }\n\n    // not found user with the id\n    result({ kind: \"not_found\" }, null);\n  });\n};\n\nUser.getAll = result => {\n  sql.query(\"SELECT * FROM users\", (err, res) => {\n    if (err) {\n      console.log(\"error: \", err);\n      result(null, err);\n      return;\n    }\n\n    console.log(\"users: \", res);\n    result(null, res);\n  });\n};\n\nUser.updateById = (id, user, result) => {\n  sql.query(\n    \"UPDATE users SET email = ?, password = ? WHERE id = ?\",\n    [user.email, user.password, id],\n    (err, res) => {\n      if (err) {\n        console.log(\"error: \", err);\n        result(null, err);\n        return;\n      }\n\n      if (res.affectedRows == 0) {\n        // not found Customer with the id\n        result({ kind: \"not_found\" }, null);\n        return;\n      }\n\n      console.log(\"updated user: \", { id: id, ...user });\n      result(null, { id: id, ...user });\n    }\n  );\n};\n\nUser.remove = (id, result) => {\n  sql.query(\"DELETE FROM users WHERE id = ?\", id, (err, res) => {\n    if (err) {\n      console.log(\"error: \", err);\n      result(null, err);\n      return;\n    }\n\n    if (res.affectedRows == 0) {\n      // not found Customer with the id\n      result({ kind: \"not_found\" }, null);\n      return;\n    }\n\n    console.log(\"deleted user with id: \", id);\n    result(null, res);\n  });\n};\n\nUser.removeAll = result => {\n  sql.query(\"DELETE FROM users\", (err, res) => {\n    if (err) {\n      console.log(\"error: \", err);\n      result(null, err);\n      return;\n    }\n\n    console.log(`deleted ${res.affectedRows} users`);\n    result(null, res);\n  });\n};\n\nmodule.exports = User;\n"]},"metadata":{},"sourceType":"module"}