{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Command = require('./command');\n\nvar CommandCode = require('../constants/commands');\n\nvar Packet = require('../packets/packet'); // TODO: time statistics?\n// usefull for queue size and network latency monitoring\n// store created,sent,reply timestamps\n\n\nvar Ping = /*#__PURE__*/function (_Command) {\n  _inherits(Ping, _Command);\n\n  var _super = _createSuper(Ping);\n\n  function Ping(callback) {\n    var _this;\n\n    _classCallCheck(this, Ping);\n\n    _this = _super.call(this);\n    _this.onResult = callback;\n    return _this;\n  }\n\n  _createClass(Ping, [{\n    key: \"start\",\n    value: function start(packet, connection) {\n      var ping = new Packet(0, Buffer.from([1, 0, 0, 0, CommandCode.PING]), 0, 5);\n      connection.writePacket(ping);\n      return Ping.prototype.pingResponse;\n    }\n  }, {\n    key: \"pingResponse\",\n    value: function pingResponse() {\n      // TODO: check it's OK packet. error check already done in caller\n      if (this.onResult) {\n        process.nextTick(this.onResult.bind(this));\n      }\n\n      return null;\n    }\n  }]);\n\n  return Ping;\n}(Command);\n\nmodule.exports = Ping;","map":{"version":3,"sources":["/root/Test/node_modules/mysql2/lib/commands/ping.js"],"names":["Command","require","CommandCode","Packet","Ping","callback","onResult","packet","connection","ping","Buffer","from","PING","writePacket","prototype","pingResponse","process","nextTick","bind","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,uBAAD,CAA3B;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,mBAAD,CAAtB,C,CAEA;AACA;AACA;;;IACMG,I;;;;;AACJ,gBAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AACpB;AACA,UAAKC,QAAL,GAAgBD,QAAhB;AAFoB;AAGrB;;;;WAED,eAAME,MAAN,EAAcC,UAAd,EAA0B;AACxB,UAAMC,IAAI,GAAG,IAAIN,MAAJ,CACX,CADW,EAEXO,MAAM,CAACC,IAAP,CAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAaT,WAAW,CAACU,IAAzB,CAAZ,CAFW,EAGX,CAHW,EAIX,CAJW,CAAb;AAMAJ,MAAAA,UAAU,CAACK,WAAX,CAAuBJ,IAAvB;AACA,aAAOL,IAAI,CAACU,SAAL,CAAeC,YAAtB;AACD;;;WAED,wBAAe;AACb;AACA,UAAI,KAAKT,QAAT,EAAmB;AACjBU,QAAAA,OAAO,CAACC,QAAR,CAAiB,KAAKX,QAAL,CAAcY,IAAd,CAAmB,IAAnB,CAAjB;AACD;;AACD,aAAO,IAAP;AACD;;;;EAvBgBlB,O;;AA0BnBmB,MAAM,CAACC,OAAP,GAAiBhB,IAAjB","sourcesContent":["'use strict';\n\nconst Command = require('./command');\nconst CommandCode = require('../constants/commands');\nconst Packet = require('../packets/packet');\n\n// TODO: time statistics?\n// usefull for queue size and network latency monitoring\n// store created,sent,reply timestamps\nclass Ping extends Command {\n  constructor(callback) {\n    super();\n    this.onResult = callback;\n  }\n\n  start(packet, connection) {\n    const ping = new Packet(\n      0,\n      Buffer.from([1, 0, 0, 0, CommandCode.PING]),\n      0,\n      5\n    );\n    connection.writePacket(ping);\n    return Ping.prototype.pingResponse;\n  }\n\n  pingResponse() {\n    // TODO: check it's OK packet. error check already done in caller\n    if (this.onResult) {\n      process.nextTick(this.onResult.bind(this));\n    }\n    return null;\n  }\n}\n\nmodule.exports = Ping;\n"]},"metadata":{},"sourceType":"script"}