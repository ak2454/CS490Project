{"ast":null,"code":"// This file was modified by Oracle on June 1, 2021.\n// A utility method was introduced to generate an Error instance from a\n// binary server packet.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n'use strict';\n\nvar _classCallCheck = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _slicedToArray = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar process = require('process');\n\nvar AuthSwitchRequest = require('./auth_switch_request');\n\nvar AuthSwitchRequestMoreData = require('./auth_switch_request_more_data');\n\nvar AuthSwitchResponse = require('./auth_switch_response');\n\nvar BinaryRow = require('./binary_row');\n\nvar BinlogDump = require('./binlog_dump');\n\nvar ChangeUser = require('./change_user');\n\nvar CloseStatement = require('./close_statement');\n\nvar ColumnDefinition = require('./column_definition');\n\nvar Execute = require('./execute');\n\nvar Handshake = require('./handshake');\n\nvar HandshakeResponse = require('./handshake_response');\n\nvar PrepareStatement = require('./prepare_statement');\n\nvar PreparedStatementHeader = require('./prepared_statement_header');\n\nvar Query = require('./query');\n\nvar RegisterSlave = require('./register_slave');\n\nvar ResultSetHeader = require('./resultset_header');\n\nvar SSLRequest = require('./ssl_request');\n\nvar TextRow = require('./text_row');\n\nvar ctorMap = {\n  AuthSwitchRequest: AuthSwitchRequest,\n  AuthSwitchRequestMoreData: AuthSwitchRequestMoreData,\n  AuthSwitchResponse: AuthSwitchResponse,\n  BinaryRow: BinaryRow,\n  BinlogDump: BinlogDump,\n  ChangeUser: ChangeUser,\n  CloseStatement: CloseStatement,\n  ColumnDefinition: ColumnDefinition,\n  Execute: Execute,\n  Handshake: Handshake,\n  HandshakeResponse: HandshakeResponse,\n  PrepareStatement: PrepareStatement,\n  PreparedStatementHeader: PreparedStatementHeader,\n  Query: Query,\n  RegisterSlave: RegisterSlave,\n  ResultSetHeader: ResultSetHeader,\n  SSLRequest: SSLRequest,\n  TextRow: TextRow\n};\nObject.entries(ctorMap).forEach(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      name = _ref2[0],\n      ctor = _ref2[1];\n\n  module.exports[name] = ctor; // monkey-patch it to include name if debug is on\n\n  if (process.env.NODE_DEBUG) {\n    if (ctor.prototype.toPacket) {\n      var old = ctor.prototype.toPacket;\n\n      ctor.prototype.toPacket = function () {\n        var p = old.call(this);\n        p._name = name;\n        return p;\n      };\n    }\n  }\n}); // simple packets:\n\nvar Packet = require('./packet');\n\nexports.Packet = Packet;\n\nvar OK = /*#__PURE__*/function () {\n  function OK() {\n    _classCallCheck(this, OK);\n  }\n\n  _createClass(OK, null, [{\n    key: \"toPacket\",\n    value: function toPacket(args, encoding) {\n      args = args || {};\n      var affectedRows = args.affectedRows || 0;\n      var insertId = args.insertId || 0;\n      var serverStatus = args.serverStatus || 0;\n      var warningCount = args.warningCount || 0;\n      var message = args.message || '';\n      var length = 9 + Packet.lengthCodedNumberLength(affectedRows);\n      length += Packet.lengthCodedNumberLength(insertId);\n      var buffer = Buffer.allocUnsafe(length);\n      var packet = new Packet(0, buffer, 0, length);\n      packet.offset = 4;\n      packet.writeInt8(0);\n      packet.writeLengthCodedNumber(affectedRows);\n      packet.writeLengthCodedNumber(insertId);\n      packet.writeInt16(serverStatus);\n      packet.writeInt16(warningCount);\n      packet.writeString(message, encoding);\n      packet._name = 'OK';\n      return packet;\n    }\n  }]);\n\n  return OK;\n}();\n\nexports.OK = OK; // warnings, statusFlags\n\nvar EOF = /*#__PURE__*/function () {\n  function EOF() {\n    _classCallCheck(this, EOF);\n  }\n\n  _createClass(EOF, null, [{\n    key: \"toPacket\",\n    value: function toPacket(warnings, statusFlags) {\n      if (typeof warnings === 'undefined') {\n        warnings = 0;\n      }\n\n      if (typeof statusFlags === 'undefined') {\n        statusFlags = 0;\n      }\n\n      var packet = new Packet(0, Buffer.allocUnsafe(9), 0, 9);\n      packet.offset = 4;\n      packet.writeInt8(0xfe);\n      packet.writeInt16(warnings);\n      packet.writeInt16(statusFlags);\n      packet._name = 'EOF';\n      return packet;\n    }\n  }]);\n\n  return EOF;\n}();\n\nexports.EOF = EOF;\n\nvar Error = /*#__PURE__*/function () {\n  function Error() {\n    _classCallCheck(this, Error);\n  }\n\n  _createClass(Error, null, [{\n    key: \"toPacket\",\n    value: function toPacket(args, encoding) {\n      var length = 13 + Buffer.byteLength(args.message, 'utf8');\n      var packet = new Packet(0, Buffer.allocUnsafe(length), 0, length);\n      packet.offset = 4;\n      packet.writeInt8(0xff);\n      packet.writeInt16(args.code); // TODO: sql state parameter\n\n      packet.writeString('#_____', encoding);\n      packet.writeString(args.message, encoding);\n      packet._name = 'Error';\n      return packet;\n    }\n  }, {\n    key: \"fromPacket\",\n    value: function fromPacket(packet) {\n      packet.readInt8(); // marker\n\n      var code = packet.readInt16();\n      packet.readString(1, 'ascii'); // sql state marker\n      // The SQL state of the ERR_Packet which is always 5 bytes long.\n      // https://dev.mysql.com/doc/dev/mysql-server/8.0.11/page_protocol_basic_dt_strings.html#sect_protocol_basic_dt_string_fix\n\n      packet.readString(5, 'ascii'); // sql state (ignore for now)\n\n      var message = packet.readNullTerminatedString('utf8');\n      var error = new Error();\n      error.message = message;\n      error.code = code;\n      return error;\n    }\n  }]);\n\n  return Error;\n}();\n\nexports.Error = Error;","map":{"version":3,"sources":["/root/Test/node_modules/mysql2/lib/packets/index.js"],"names":["process","require","AuthSwitchRequest","AuthSwitchRequestMoreData","AuthSwitchResponse","BinaryRow","BinlogDump","ChangeUser","CloseStatement","ColumnDefinition","Execute","Handshake","HandshakeResponse","PrepareStatement","PreparedStatementHeader","Query","RegisterSlave","ResultSetHeader","SSLRequest","TextRow","ctorMap","Object","entries","forEach","name","ctor","module","exports","env","NODE_DEBUG","prototype","toPacket","old","p","call","_name","Packet","OK","args","encoding","affectedRows","insertId","serverStatus","warningCount","message","length","lengthCodedNumberLength","buffer","Buffer","allocUnsafe","packet","offset","writeInt8","writeLengthCodedNumber","writeInt16","writeString","EOF","warnings","statusFlags","Error","byteLength","code","readInt8","readInt16","readString","readNullTerminatedString","error"],"mappings":"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","sourcesContent":["// This file was modified by Oracle on June 1, 2021.\n// A utility method was introduced to generate an Error instance from a\n// binary server packet.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n'use strict';\n\nconst process = require('process');\n\nconst AuthSwitchRequest = require('./auth_switch_request');\nconst AuthSwitchRequestMoreData = require('./auth_switch_request_more_data');\nconst AuthSwitchResponse = require('./auth_switch_response');\nconst BinaryRow = require('./binary_row');\nconst BinlogDump = require('./binlog_dump');\nconst ChangeUser = require('./change_user');\nconst CloseStatement = require('./close_statement');\nconst ColumnDefinition = require('./column_definition');\nconst Execute = require('./execute');\nconst Handshake = require('./handshake');\nconst HandshakeResponse = require('./handshake_response');\nconst PrepareStatement = require('./prepare_statement');\nconst PreparedStatementHeader = require('./prepared_statement_header');\nconst Query = require('./query');\nconst RegisterSlave = require('./register_slave');\nconst ResultSetHeader = require('./resultset_header');\nconst SSLRequest = require('./ssl_request');\nconst TextRow = require('./text_row');\n\nconst ctorMap = {\n  AuthSwitchRequest,\n  AuthSwitchRequestMoreData,\n  AuthSwitchResponse,\n  BinaryRow,\n  BinlogDump,\n  ChangeUser,\n  CloseStatement,\n  ColumnDefinition,\n  Execute,\n  Handshake,\n  HandshakeResponse,\n  PrepareStatement,\n  PreparedStatementHeader,\n  Query,\n  RegisterSlave,\n  ResultSetHeader,\n  SSLRequest,\n  TextRow\n};\nObject.entries(ctorMap).forEach(([name, ctor]) => {\n  module.exports[name] = ctor;\n  // monkey-patch it to include name if debug is on\n  if (process.env.NODE_DEBUG) {\n    if (ctor.prototype.toPacket) {\n      const old = ctor.prototype.toPacket;\n      ctor.prototype.toPacket = function() {\n        const p = old.call(this);\n        p._name = name;\n        return p;\n      };\n    }\n  }\n});\n\n// simple packets:\nconst Packet = require('./packet');\nexports.Packet = Packet;\n\nclass OK {\n  static toPacket(args, encoding) {\n    args = args || {};\n    const affectedRows = args.affectedRows || 0;\n    const insertId = args.insertId || 0;\n    const serverStatus = args.serverStatus || 0;\n    const warningCount = args.warningCount || 0;\n    const message = args.message || '';\n\n    let length = 9 + Packet.lengthCodedNumberLength(affectedRows);\n    length += Packet.lengthCodedNumberLength(insertId);\n\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0);\n    packet.writeLengthCodedNumber(affectedRows);\n    packet.writeLengthCodedNumber(insertId);\n    packet.writeInt16(serverStatus);\n    packet.writeInt16(warningCount);\n    packet.writeString(message, encoding);\n    packet._name = 'OK';\n    return packet;\n  }\n}\n\nexports.OK = OK;\n\n// warnings, statusFlags\nclass EOF {\n  static toPacket(warnings, statusFlags) {\n    if (typeof warnings === 'undefined') {\n      warnings = 0;\n    }\n    if (typeof statusFlags === 'undefined') {\n      statusFlags = 0;\n    }\n    const packet = new Packet(0, Buffer.allocUnsafe(9), 0, 9);\n    packet.offset = 4;\n    packet.writeInt8(0xfe);\n    packet.writeInt16(warnings);\n    packet.writeInt16(statusFlags);\n    packet._name = 'EOF';\n    return packet;\n  }\n}\n\nexports.EOF = EOF;\n\nclass Error {\n  static toPacket(args, encoding) {\n    const length = 13 + Buffer.byteLength(args.message, 'utf8');\n    const packet = new Packet(0, Buffer.allocUnsafe(length), 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0xff);\n    packet.writeInt16(args.code);\n    // TODO: sql state parameter\n    packet.writeString('#_____', encoding);\n    packet.writeString(args.message, encoding);\n    packet._name = 'Error';\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    packet.readInt8(); // marker\n    const code = packet.readInt16();\n    packet.readString(1, 'ascii'); // sql state marker\n    // The SQL state of the ERR_Packet which is always 5 bytes long.\n    // https://dev.mysql.com/doc/dev/mysql-server/8.0.11/page_protocol_basic_dt_strings.html#sect_protocol_basic_dt_string_fix\n    packet.readString(5, 'ascii'); // sql state (ignore for now)\n    const message = packet.readNullTerminatedString('utf8');\n    const error = new Error();\n    error.message = message;\n    error.code = code;\n    return error;\n  }\n}\n\nexports.Error = Error;\n"]},"metadata":{},"sourceType":"script"}