{"ast":null,"code":"'use strict'; // http://dev.mysql.com/doc/internals/en/com-binlog-dump.html#packet-COM_BINLOG_DUMP\n\nvar _classCallCheck = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/root/Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Packet = require('../packets/packet');\n\nvar CommandCodes = require('../constants/commands'); // TODO: add flag to constants\n// 0x01 - BINLOG_DUMP_NON_BLOCK\n// send EOF instead of blocking\n\n\nvar BinlogDump = /*#__PURE__*/function () {\n  function BinlogDump(opts) {\n    _classCallCheck(this, BinlogDump);\n\n    this.binlogPos = opts.binlogPos || 0;\n    this.serverId = opts.serverId || 0;\n    this.flags = opts.flags || 0;\n    this.filename = opts.filename || '';\n  }\n\n  _createClass(BinlogDump, [{\n    key: \"toPacket\",\n    value: function toPacket() {\n      var length = 15 + Buffer.byteLength(this.filename, 'utf8'); // TODO: should be ascii?\n\n      var buffer = Buffer.allocUnsafe(length);\n      var packet = new Packet(0, buffer, 0, length);\n      packet.offset = 4;\n      packet.writeInt8(CommandCodes.BINLOG_DUMP);\n      packet.writeInt32(this.binlogPos);\n      packet.writeInt16(this.flags);\n      packet.writeInt32(this.serverId);\n      packet.writeString(this.filename);\n      return packet;\n    }\n  }]);\n\n  return BinlogDump;\n}();\n\nmodule.exports = BinlogDump;","map":{"version":3,"sources":["/root/Test/node_modules/mysql2/lib/packets/binlog_dump.js"],"names":["Packet","require","CommandCodes","BinlogDump","opts","binlogPos","serverId","flags","filename","length","Buffer","byteLength","buffer","allocUnsafe","packet","offset","writeInt8","BINLOG_DUMP","writeInt32","writeInt16","writeString","module","exports"],"mappings":"AAAA,a,CAEA;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAAtB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,uBAAD,CAA5B,C,CAEA;AACA;AACA;;;IACME,U;AACJ,sBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,SAAL,GAAiBD,IAAI,CAACC,SAAL,IAAkB,CAAnC;AACA,SAAKC,QAAL,GAAgBF,IAAI,CAACE,QAAL,IAAiB,CAAjC;AACA,SAAKC,KAAL,GAAaH,IAAI,CAACG,KAAL,IAAc,CAA3B;AACA,SAAKC,QAAL,GAAgBJ,IAAI,CAACI,QAAL,IAAiB,EAAjC;AACD;;;;WAED,oBAAW;AACT,UAAMC,MAAM,GAAG,KAAKC,MAAM,CAACC,UAAP,CAAkB,KAAKH,QAAvB,EAAiC,MAAjC,CAApB,CADS,CACqD;;AAC9D,UAAMI,MAAM,GAAGF,MAAM,CAACG,WAAP,CAAmBJ,MAAnB,CAAf;AACA,UAAMK,MAAM,GAAG,IAAId,MAAJ,CAAW,CAAX,EAAcY,MAAd,EAAsB,CAAtB,EAAyBH,MAAzB,CAAf;AACAK,MAAAA,MAAM,CAACC,MAAP,GAAgB,CAAhB;AACAD,MAAAA,MAAM,CAACE,SAAP,CAAiBd,YAAY,CAACe,WAA9B;AACAH,MAAAA,MAAM,CAACI,UAAP,CAAkB,KAAKb,SAAvB;AACAS,MAAAA,MAAM,CAACK,UAAP,CAAkB,KAAKZ,KAAvB;AACAO,MAAAA,MAAM,CAACI,UAAP,CAAkB,KAAKZ,QAAvB;AACAQ,MAAAA,MAAM,CAACM,WAAP,CAAmB,KAAKZ,QAAxB;AACA,aAAOM,MAAP;AACD;;;;;;AAGHO,MAAM,CAACC,OAAP,GAAiBnB,UAAjB","sourcesContent":["'use strict';\n\n// http://dev.mysql.com/doc/internals/en/com-binlog-dump.html#packet-COM_BINLOG_DUMP\n\nconst Packet = require('../packets/packet');\nconst CommandCodes = require('../constants/commands');\n\n// TODO: add flag to constants\n// 0x01 - BINLOG_DUMP_NON_BLOCK\n// send EOF instead of blocking\nclass BinlogDump {\n  constructor(opts) {\n    this.binlogPos = opts.binlogPos || 0;\n    this.serverId = opts.serverId || 0;\n    this.flags = opts.flags || 0;\n    this.filename = opts.filename || '';\n  }\n\n  toPacket() {\n    const length = 15 + Buffer.byteLength(this.filename, 'utf8'); // TODO: should be ascii?\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(CommandCodes.BINLOG_DUMP);\n    packet.writeInt32(this.binlogPos);\n    packet.writeInt16(this.flags);\n    packet.writeInt32(this.serverId);\n    packet.writeString(this.filename);\n    return packet;\n  }\n}\n\nmodule.exports = BinlogDump;\n"]},"metadata":{},"sourceType":"script"}